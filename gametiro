import pygame
import random
import sys

# Inicialização do Pygame
pygame.init()

# Definição das cores
PRETO = (0, 0, 0)
BRANCO = (255, 255, 255)
VERMELHO = (255, 0, 0)

# Configurações da tela
largura_tela = 600
altura_tela = 400
tela = pygame.display.set_mode((largura_tela, altura_tela))
pygame.display.set_caption("Jogo de Tiro")

# Definição das classes
class Jogador(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((50, 50))
        self.image.fill(BRANCO)
        self.rect = self.image.get_rect()
        self.rect.centerx = largura_tela // 2
        self.rect.bottom = altura_tela - 10
        self.velocidade = 8

    def update(self):
        # Atualiza a posição do jogador
        teclas = pygame.key.get_pressed()
        if teclas[pygame.K_LEFT]:
            self.rect.x -= self.velocidade
        if teclas[pygame.K_RIGHT]:
            self.rect.x += self.velocidade

        # Limita o jogador dentro da tela
        if self.rect.right > largura_tela:
            self.rect.right = largura_tela
        if self.rect.left < 0:
            self.rect.left = 0

    def shoot(self):
        bala = Bala(self.rect.centerx, self.rect.top)
        sprites_todos.add(bala)
        balas.add(bala)

class Inimigo(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((30, 40))
        self.image.fill(VERMELHO)
        self.rect = self.image.get_rect()
        self.rect.x = random.randrange(largura_tela - self.rect.width)
        self.rect.y = random.randrange(-100, -40)
        self.velocidade_y = random.randrange(1, 5)

    def update(self):
        self.rect.y += self.velocidade_y
        if self.rect.top > altura_tela + 10:
            self.rect.x = random.randrange(largura_tela - self.rect.width)
            self.rect.y = random.randrange(-100, -40)
            self.velocidade_y = random.randrange(1, 5)

class Bala(pygame.sprite.Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = pygame.Surface((10, 20))
        self.image.fill(PRETO)
        self.rect = self.image.get_rect()
        self.rect.centerx = x
        self.rect.bottom = y
        self.velocidade = -10

    def update(self):
        self.rect.y += self.velocidade
        if self.rect.bottom < 0:
            self.kill()

# Grupos de sprites
sprites_todos = pygame.sprite.Group()
jogadores = pygame.sprite.Group()
balas = pygame.sprite.Group()
inimigos = pygame.sprite.Group()

# Criando jogador
jogador = Jogador()
sprites_todos.add(jogador)
jogadores.add(jogador)

# Criando inimigos
for i in range(8):
    inimigo = Inimigo()
    sprites_todos.add(inimigo)
    inimigos.add(inimigo)

# Loop principal do jogo
while True:
    # Verificação de eventos
    for evento in pygame.event.get():
        if evento.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        elif evento.type == pygame.KEYDOWN:
            if evento.key == pygame.K_SPACE:
                jogador.shoot()

    # Atualização dos sprites
    sprites_todos.update()

    # Verificação de colisões
    hits = pygame.sprite.groupcollide(balas, inimigos, True, True)
    for hit in hits:
        inimigo = Inimigo()
        sprites_todos.add(inimigo)
        inimigos.add(inimigo)

    hits = pygame.sprite.spritecollide(jogador, inimigos, False)
    if hits:
        pygame.quit()
        sys.exit()

    # Renderização
    tela.fill(PRETO)
    sprites_todos.draw(tela)
    pygame.display.flip()

    # Controle de FPS
    pygame.time.Clock().tick(60)
